{"body":"###What is it?\r\nThis page is dedicated to providing more information about the code and the data used in the paper ***Making do with what you have: Use your bootstraps*** by _Guillaume Calmettes, Gordon Drummond and Sarah Vowler_ (see [paper on J. Physiol. website][3]).\r\n\r\nThis paper is part of the [Statistical Perspectives Paper Series](http://jp.physoc.org/cgi/collection/stats_reporting), initiated by the [Physiological](http://www.physoc.org/) and [Pharmacological](http://www.bps.ac.uk/view/index.html) Societies in the UK, which aims at providing clear non-technical guidance for authors on best practice in statistical testing and data presentation.\r\n\r\nThe code is written in the [Python](http://www.python.org/) programming language, and requires the [Numpy][2] library which provides support for array manipulation.\r\n\r\n###Where to get it?\r\nThe source code is currently hosted on GitHub at: https://github.com/gcalmettes/bootstrap-tools.\r\nYou can directly view it or download it from the links at the top of this page.\r\n\r\n###What is inside?\r\nFour bootstrap methods are provided in the source code:\r\n\r\n- `bootstrap`: generates x bootstrap samples from a given data. The number of bootstrap samples\r\n(_10000_ by default) as well as the replacement method (_replacement=True_ by default)\r\ncan be tweaked.\r\nAll of the other functions of the package are based on this function.\r\n- `bootci`: computes the confidence intervals of a statistic of a given data,\r\nusing the [Bootstrap Percentile Interval][1] method.\r\nBy default the analysed statistic is the mean, and the level of confidence is 0.05\r\n(95% confidence interval). _Note:_ the Bias-Corrected Accelerated Interval method, will be\r\nadded in a near future.\r\n- `bootpv`: computes the one-tailed pvalue of a statistics (_mean_ by default) when comparing\r\ntwo data samples.\r\n- `bootci_diff`: computes the confidence intervals of the difference of a statistic\r\n(_mean_ by default) when comparing two data samples.\r\n\r\nPlease refer to the docstring of the functions to know more about the options available for each of\r\nthem.\r\n\r\n###How does it work? (Practical example)\r\n\r\nLet us use the data described in the paper, and provided in the `data` folder of the\r\nsource code. The data represent the jump distances of two different groups of frogs,\r\none from the north of California and one from the region of Calaveras, where escapees\r\nfrom the jumping competition have interbred with native frogs. \r\nLet us take the 50 first data points of each group of frogs as samples to work with.\r\n\r\nAssuming that you are running a python interpreter in a working directory in which\r\nyou have moved the files of the downloadable archive, \r\nthe code below will allow you to load the data and take the 50 first\r\ndata points for each group of frogs. Note that this code use the [numpy][2] library.\r\n\r\n    # import of the numpy library\r\n    import numpy as np\r\n\r\n    # load the data for each population of frogs\r\n    northern_population = np.loadtxt('data/population_distribution-1.txt')\r\n    calaveras_population = np.loadtxt('data/population_distribution-2.txt')\r\n\r\n    # take the 50 first data points of each group of frogs\r\n    northern_sample = northern_population[:50]\r\n    calaveras_sample = calaveras_population[:50]\r\n\r\n\r\n####Inspection of the data\r\nThe top-left panel of the\r\nfigure below shows the distribution of the jumps for the two groups of frogs, and\r\nthe top-right panel display our samples taken from those populations.\r\n\r\n![fig-samples](images/fig-samples.png)\r\n\r\nSuppose we want to **compare estimates of the two populations from which these samples\r\nhave been drawn**.\r\nFirst, let us inspect a [Quantile-Quantile](http://en.wikipedia.org/wiki/Q-Q_plot)\r\nplot of our samples (bottom panels).\r\nQ-Q plots give us a visual check whether a sample follows a specific distribution, by\r\ncomparing the quantiles of two distributions against each other.\r\nThe case that we are interested in most often, is a test for \r\n[normality](http://en.wikipedia.org/wiki/Normal_distribution).\r\nHere, as suggested by the points not following a linear pattern, it\r\nturns out that our samples are not consistent with a _normal distribution_,\r\nmaking difficult to use statistical tools based on the assumption of\r\n_normal distribution_ of the data. The bootstrap method, however, does not need\r\nsuch a strong assumption, and therefore can be used to analyze our data.\r\n\r\n\r\n####Compute the bootstrap confidence intervals of an estimate of the data\r\nSuppose we want to compute the confidence interval of the mean for each sample.\r\nThis can be achieve with the `bootci` function, if you have imported it into\r\nyour namespace:\r\n\r\n    # import all the bootstrap functions in the namespace\r\n    from code.bootstrap_routines import *\r\n    \r\n    # compute the 95% confidence interval of the mean for each group\r\n    bootci(northern_sample)\r\n    bootci(calaveras_sample)\r\n\r\nWhich gives the results below:\r\n- Northern frogs: Mean **5.184, 95% CI [4.912, 5.472]**\r\n- Calaveras frogs: Mean **5.628, 95% CI [5.344, 5.931]**\r\n\r\nNote that your values will differ slightly.\r\n\r\nBy default, the `bootci` function compute the 95% confidence intervals\r\nof the mean, but any other level of confidence and any other estimate of the sample\r\ncan be chosen, by setting the parameters `alpha` and `stat` to the desired values \r\nand function respectively. As an example, the code below return the 90% confidence\r\ninterval of the median for the Northern frogs sample:\r\n\r\n    # compute the 90% confidence interval of the median of the northern frogs\r\n    bootci(northern, stat=np.median, alpha=0.1)\r\n\r\nWhich returns:\r\n- Norther frogs: **Median 4.983, 90% CI [4.766, 5.174]**\r\n\r\nNote that your values will differ slightly.\r\n\r\n####Comparison of two samples\r\nFrom our samples, the difference in mean jump distance between the Northern\r\nand the Calaveras frogs is about 0.44 m. We can compute the 95% confidence\r\nintervals of this estimate to evaluate the statistical significance of this \r\ndifference as well as to gain an indication of the likely size of this\r\ndifference.\r\n\r\nThis can be done with the `bootci_diff` function as follow:\r\n\r\n    # compute the 95% confidence interval of the difference in mean between the two sample\r\n    bootci_diff(calaveras_sample, northern_sample)\r\n\r\nThis code give us a 95% confidence interval of **[0.039, 0.847]**.\r\nYour values will differ slightly. \r\nThe values do not include zero, and we can conclude that the observed \r\ndifference in jump distance mean between the two groups of frogs is unlikely to be a result of chance.\r\n\r\nThis is illustrated in the figure below, where the dashed lines indicates the central 95%\r\nof the computed bootstrap differences, and the solid line indicates zero difference.\r\n\r\n![fig-samples](images/fig-differences.png)\r\n\r\n[1]: http://en.wikipedia.org/wiki/Bootstrapping_(statistics)#Methods_for_bootstrap_confidence_intervals\r\n[2]: http://www.numpy.org/\r\n[3]: http://jp.physoc.org/content/590/15/3403.full\r\n","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Statistical Perspectives","tagline":"Making do with what you have: Use your bootstraps","google":""}
